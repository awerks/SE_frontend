/* landing.js – SPA router & UI glue
 * May 2025 – updated to respect the REST hierarchy
 * (project → teamspace → dashboard)
 */

//partially generated by chat gpt, work in progress as the code doesn't fully work

import { initializeTheme2 } from './theme.js'; 
//import { attachModalHandlers } from './teamspace.js'; // DO NOT UNCOMMENT
import { setupModal } from './teamspace.js';


/* -------------------------------------------------------------------------- */
/*  Helpers                                                                   */
/* -------------------------------------------------------------------------- */

function displayUserInfo() {
  const usernameEl = document.getElementById('user-username');
  const roleEl     = document.getElementById('user-role');
  const userIdEl   = document.getElementById('user-id');

  const username = localStorage.getItem('username') ?? 'Guest';
  const role     = localStorage.getItem('role')     ?? 'Unknown';
  const userId   = localStorage.getItem('userId')   ?? '-';

  if (usernameEl) usernameEl.textContent = username;
  if (roleEl)     roleEl.textContent     = role;
  if (userIdEl)   userIdEl.textContent   = userId;
}

function attachModalHandlers() {
  const overlay   = document.getElementById("createTeamModalOverlay");
  const openBtn   = document.getElementById("openTeamModalBtn");
  const closeBtn  = document.getElementById("closeTeamModalBtn");
  const createForm= document.getElementById("createTeamForm");

  openBtn?.addEventListener("click", () => overlay?.classList.remove("hidden"));
  closeBtn?.addEventListener("click", () => overlay?.classList.add("hidden"));

  // close if clicked outside the modal dialog
  overlay?.addEventListener("click", e => {
    if (e.target === overlay) overlay.classList.add("hidden");
  });

  // TODO(Optional): if we want the handle to create a form here, might comment out later though
  createForm?.addEventListener("submit", e => {
    e.preventDefault();
    // TODO: logic needs to be added
    overlay.classList.add("hidden");
  });
}

function loadPage(url, updateHistory = true) {
  fetch(url)
    .then(res => {
      if (!res.ok) throw new Error(`${url} → ${res.statusText}`);
      return res.text();
    })
    .then(html => {
      document.getElementById('main-content').innerHTML = html;

      if(url.includes('project.html')) //for loading and executing project.js
      {
        const s = document.createElement('script');
        s.type = 'module';
        s.src = '../js/project.js';
        document.body.appendChild(s);
      }

      if (updateHistory) history.pushState({ page: url }, '');

      attachDynamicClickHandlers(url);  
      if (url.includes('teamspace.html'))  setupModal();
      if (url.includes('chat.html'))       enableChat();
    })
    .catch(err => {
      console.error(err);
      document.getElementById('main-content').innerHTML =
        `<p>Error loading page.</p>`;
    });
}

function enableChat() {
  // lazy-load CSS & JS so other pages stay light
  const chatCSS = document.getElementById('chat-css');
  if (chatCSS) chatCSS.disabled = false;

  setTimeout(() => {
    const s = document.createElement('script');
    s.src = '../js/chat.js';
    document.body.appendChild(s);
  }, 100);
}

/* -------------------------------------------------------------------------- */
/*  Page-specific listeners                                                   */
/* -------------------------------------------------------------------------- */

function addIndividualProjectListeners() {
  document.querySelectorAll('.project_card').forEach(card => {
    card.addEventListener('click', e => {
      e.preventDefault();
      const projectId = card.dataset.projectId;
      if (!projectId) return console.warn('projectId missing on card');

      localStorage.setItem('currentProjectId', projectId);
      loadPage(`teamspace.html?projectId=${projectId}`);
    });
  });
}

function addIndividualTeamspaceListeners() {
  document.querySelectorAll('.teamspace_card').forEach(card => {
    card.addEventListener('click', e => {
      // ignore clicks on the 🗑 button
      if (e.target.closest('.delete_teamspace_btn')) return;

      e.preventDefault();
      const teamspaceId = card.dataset.teamspaceId;
      if (!teamspaceId) return console.warn('teamspaceId missing on card');

      localStorage.setItem('selectedTeamspaceId', teamspaceId);
      loadPage(`dashboard.html?teamspaceId=${teamspaceId}`);
    });
  });
}

function addIndividualTaskListeners() {
  document.querySelectorAll('.card_task').forEach(card => {
    card.addEventListener('click', e => {
      e.preventDefault();
      loadPage('task.html');
    });
  });
}

/* -------------------------------------------------------------------------- */
/*  Theme & mobile header                                                     */
/* -------------------------------------------------------------------------- */

function setupThemeToggle() {
  const btn  = document.getElementById('changeTheme');
  const root = document.documentElement;
  const init = localStorage.getItem('theme') || 'light';
  root.setAttribute('data-theme', init);

  if (btn) {
    const clone = btn.cloneNode(true);
    btn.parentNode.replaceChild(clone, btn);
    clone.addEventListener('click', () => {
      const cur = root.getAttribute('data-theme') === 'light' ? 'dark' : 'light';
      root.setAttribute('data-theme', cur);
      localStorage.setItem('theme', cur);
    });
  }
}

function setupMobileHeader() {
  const topbar = document.getElementById('mobile-topbar');
  const drop   = document.getElementById('mobile-dropdown');
  const toggle = document.getElementById('mobile-menu-toggle');
  const back   = document.getElementById('header-back-button');
  const mq     = () => window.innerWidth <= 600;

  function sync() {
    if (mq()) {
      topbar?.classList.remove('hidden');
      back?.classList.add('hidden');
    } else {
      topbar?.classList.add('hidden');
      back?.classList.remove('hidden');
      drop?.classList.add('hidden');
    }
  }
  sync();
  window.addEventListener('resize', sync);

  if (toggle && drop) {
    toggle.addEventListener('click', e => {
      e.stopPropagation();
      drop.classList.toggle('hidden');
    });
    document.addEventListener('click', e => {
      if (!drop.contains(e.target) && !drop.classList.contains('hidden'))
        drop.classList.add('hidden');
    });
  }
}

/* -------------------------------------------------------------------------- */
/*  Navigation delegations                                                    */
/* -------------------------------------------------------------------------- */

function attachDynamicClickHandlers(url) {
  if (url.includes('project.html'))
  {
    addIndividualProjectListeners(); //declared below

    //event‐delegation for dynamically created cards
    const projectList = document.getElementById('project-list');
    // maybe I will remove any old listener to avoid duplicates for now
    projectList.replaceWith(projectList.cloneNode(true));
    document
      .getElementById('project-list')
      .addEventListener('click', e => {
        const card = e.target.closest('.project_card');
        if (!card) return;
        const projectId = card.dataset.projectId;
        localStorage.setItem('currentProjectId', projectId);
        loadPage(`teamspace.html?projectId=${projectId}`);
      });
  }  
  if (url.includes('dashboard.html')) addIndividualTaskListeners();
  if (url.includes('teamspace.html')) addIndividualTeamspaceListeners();

  setupMobileHeader();   // must re-run because new DOM is injected
  setupThemeToggle();    // idem
}

/* -------------------------------------------------------------------------- */
/*  Bootstrap                                                                 */
/* -------------------------------------------------------------------------- */

document.addEventListener('DOMContentLoaded', () => {
  displayUserInfo();
  setupMobileHeader();
  setupThemeToggle();

  // initial view
  if (!document.getElementById('main-content').children.length) {
    loadPage('project.html');
  }

  // sidebar / header navigation
  document.addEventListener('click', e => {
    const btn = e.target.closest('.dynamic_nav');
    if (!btn) return;
    const page = btn.dataset.page;
    if (page) loadPage(`${page}.html`);
  });

  // logout
  document.getElementById('logout')?.addEventListener('click', () => {
    localStorage.removeItem('username');
    localStorage.removeItem('role');
    window.location.href = './index.html';
  });

  // browser back/forward
  window.addEventListener('popstate', e => {
    if (e.state?.page) loadPage(e.state.page, false);
  });
});
